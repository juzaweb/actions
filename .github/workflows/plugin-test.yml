name: Run Plugin phpunit test suite
on:
  workflow_call:
    inputs:
      plugin:
        type: string
      cms:
        type: string
        default: dev-develop
      version:
        type: string
        default: dev-master
      mysql:
        type: string
        default: 8.0.21

jobs:
  phpunit-test-suite:
    runs-on: ${{ matrix.os }}
    services:
      mysql:
        image: mysql:${{ inputs.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
          MYSQL_USER: root
          MYSQL_PASSWORD:
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.0, 8.1]
    name: PHP ${{ matrix.php }} - CMS ${{ inputs.cms }} - ${{ matrix.os }} - MySQL ${{ inputs.mysql }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none
      - name: Install composer
        run: composer create-project juzaweb/cms:${{ inputs.cms }} blog
        working-directory: blog
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
        working-directory: blog
      - name: Update package
        working-directory: blog
        run: composer require juzaweb/modules:dev-master juzaweb/dev-tool:dev-master
      - name: Install Example plugin for Testing
        working-directory: blog
        run: composer require juzaweb/example:dev-master
      - name: Install plugin
        run: composer require ${{ inputs.plugin }}:${{ inputs.version }}
        working-directory: blog
      - name: Config database & Execute tests Install
        run: |
          php artisan test vendor/juzaweb/modules/modules/Tests/InstallTest.php
          composer dump-autoload
        working-directory: blog
      - name: Active plugin
        run: php artisan plugin:enable ${{ inputs.plugin }}
        working-directory: blog
      - name: Run Tests
        run: php artisan test
        working-directory: blog
      - name: Run Plugin Unit Test
        run: php artisan test plugins/${{ inputs.plugin }}/tests/Unit
        working-directory: blog
      - name: Run Plugin Feature Test
        run: php artisan test plugins/${{ inputs.plugin }}/tests/Feature
        working-directory: blog
      - name: Deactive plugin
        run: php artisan plugin:disable ${{ inputs.plugin }}
        working-directory: blog
